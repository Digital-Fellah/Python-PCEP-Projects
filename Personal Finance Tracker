# Personal Finance Tracker
# This program allows users to track their personal finances by logging income and expenses.

# Initialize an empty dictionary to store financial transactions
transactions = {}

# Infinite loop to continuously prompt the user for input
while True:
    print("\nPersonal Finance Tracker")
    print("1. Log Income")
    print("2. Log Expense")
    print("3. View Transactions")
    print("4. Exit")

    choice = input("Enter your choice (1/2/3/4): ")

    if choice == '1':
        # Log Income
        date = input("Enter the date (YYYY-MM-DD): ")
        amount = float(input("Enter the amount: "))
        category = input("Enter the category: ")

        # Add income transaction to the dictionary
        if date not in transactions:
            transactions[date] = []
        transactions[date].append((amount, category, "Income"))
        print("Income logged successfully!")

    elif choice == '2':
        # Log Expense
        date = input("Enter the date (YYYY-MM-DD): ")
        amount = float(input("Enter the amount: "))
        category = input("Enter the category: ")

        # Add expense transaction to the dictionary
        if date not in transactions:
            transactions[date] = []
        transactions[date].append((amount, category, "Expense"))
        print("Expense logged successfully!")

    elif choice == '3':
        # View Transactions
        print("\n--- All Transactions ---")
        for date, items in transactions.items():
            print(f"On {date}:")
            for item in items:
                amount, category, type = item
                print(f"  {type}: ${amount:.2f} in {category}")
        print("-----------------------")

    elif choice == '4':
        # Exit the program
        print("Exiting Personal Finance Tracker. Goodbye!")
        break

    else:
        print("Invalid choice. Please enter 1, 2, 3, or 4.")

# End of the program


"""
EXPLANATION OF THE CODE

The program initializes an empty dictionary transactions to store financial data.
It then enters an infinite loop to continuously prompt the user for input.
The user can choose to log income (1), log expense (2), view transactions (3), or exit the program (4).
Depending on the user's choice:
Logging income or expense prompts the user for date, amount, and category, then adds this data to the transactions dictionary under the respective date.
Viewing transactions iterates through the transactions dictionary and prints all logged transactions grouped by date.
Exiting the program breaks out of the loop and ends the program.
"""


"""
NOTIONS COVERED

Dictionaries: Building, indexing (using date as key), adding keys (checking if date exists before appending), removing keys (not explicitly implemented here but applicable), iterating through dictionaries (looping through transactions dictionary).
Methods: items() (used to iterate through key-value pairs in transactions dictionary).
"""
